currentBuild.displayName = "${env.JOB_NAME}_(${params.BRANCH})_#"+currentBuild.number
pipeline {
    options {
        skipDefaultCheckout()
    }
    agent any
    stages {
        stage('CheckOut SCM') {
            steps {
                logger("SAG_HOME", "${env.SAG_HOME}", "INFO")
                logger("SAG_CI_HOME", "${env.SAG_CI_HOME}", "INFO")
                logger("JOB_NAME", "${env.JOB_NAME}", "INFO")
                logger("GIT_URL", "${params.GIT_URL}", "INFO")
                logger("BRANCH", "${params.BRANCH}", "INFO")
                logger("AUTORESOLVE", "${params.AUTORESOLVE}", "INFO")
                logger("JENKINS_CUSTOM_WORKSPACE", "${env.JENKINS_CUSTOM_WORKSPACE}", "INFO")
                dir("${env.JENKINS_CUSTOM_WORKSPACE}"){
                    checkout([$class: 'GitSCM', 
                        branches: [[name: '*/'+"${params.BRANCH}"]], 
                        doGenerateSubmoduleConfigurations: false, 
                        submoduleCfg: [], 
                        userRemoteConfigs: [[url: "${params.GIT_URL}"]]
                    ])
                }
            }
        }
        stage('Build'){
            steps {
                dir("${env.JENKINS_CUSTOM_WORKSPACE}"){
                    sh "ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} -DautoResolve=${params.AUTORESOLVE} build"
                }
            }
        }
        stage('Deploy') {
            steps {
                dir("${env.JENKINS_CUSTOM_WORKSPACE}"){
                    sh "ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} -DautoResolve=${params.AUTORESOLVE} deploy"
                }
            }
        }
    }
}

def logger(key, value, level) {
  echo level+":= " + key + " : " + value
}